# Functions: GitHub Actions work-flow 파일로써, 코드 품질 검사를 자동화하는 설정을 포함하고 있음.

# 본 work-flow의 이름으로써 본 워크플로우 이름을 "check-lint"로 지정함.
name: check-lint

# 본 work-flow는 pull-request가 생성될 때마다 실행됨(본 파일의 목적인 코드 품질 검사를 실행) 
on: [pull_request]

# 이하는 작업의 구성 요소를 의미
jobs:
  check-lint:                                   # 작업 이름
    runs-on: ubuntu-latest                      # 이 작업은 최신 Ubuntu 환경에서 실행될 것임. 

    steps:                                      # 작업에서 수행할 단계를 정의함
      - name: Checkout code                     # 첫번째로 실행되는 step
        uses: actions/checkout@v4               # actions/setup-python@v4을 사용하여 저장소의 코드를 체크아웃함
                                                # 무슨말이냐면 현재 이 work-flow가 정의된 저장소를 `$GITHUB_WORKSPACE` 디렉토리로 클론한 후에
                                                # 발생되는 이벤트(본 work-flow의 경우 pull-request)에 따라 해당 커밋을 `$GITHUB_WORKSPACE` 디렉토리에서 checkout 함
                                                # Q. 왜 그렇게 해주나요? 
                                                # => 아니 코드를 VM으로 가져와야 아래 step들에 해당하는 내용들을 체크하지요..?
                                                # GitHub Actions의 runner는 기본적으로 비어 있어서, 워크플로우에서 코드를 사용할 수 있도록 `actions/checkout`이 필요한 것!
                                                # Q. 왜 하나요? 
                                                # => 단순히 로컬에서 push 해버리고 끝! 이게 아니라, CI/CD 파이프라인에서 테스트 및 기타 작업을 하기 위해서 위 단계가 필수적으로 필요한 것.
                                                # code-lint, test, build 등의 자동화 작업에서는 runner 환경에 코드가 존재해야하므로, actions/checkout은 핵심적인 역할을 함.
                                                                       
      - name: Set up Python 3.11                # 두번째로 실행되는 step
        uses: actions/setup-python@v5           # actions/setup-python@v5을 사용하여 python 버전 확인
        with:                                   # 이때 Python 버전은 3.11로 지정
          python-version: "3.11"

      - name: Install dependencies              # 세번째로 실행되는 step: 명령어 실행
        run: |                                  # '|'은 멀티라인 문자열로써, run 키워드 다음에 오는 명령어를 여러줄로 작성 가능하게 해줌
          python3 -m pip install --upgrade pip  

      - name: Check Lint                        # 네번째로 실행되는 step: 명령어 실행
        run: |
          make quality
